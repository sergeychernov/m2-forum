.scrollableWrapper {
  height: calc(100vh - 200px);
  overflow: hidden;
}

.conclusionsCards {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--space-32);
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--space-24);
  position: relative;
}

/* Фоновые эффекты для всего контейнера */
.conclusionsCards::before {
  content: '';
  position: absolute;
  top: -50px;
  left: -50px;
  right: -50px;
  bottom: -50px;
  background: 
    radial-gradient(circle at 20% 30%, rgba(0, 212, 255, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(255, 107, 107, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 50% 50%, rgba(var(--color-primary-rgb), 0.02) 0%, transparent 70%);
  pointer-events: none;
  z-index: -2;
  animation: backgroundPulse 8s infinite;
}

@keyframes backgroundPulse {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}

.performanceChart {
  margin-bottom: var(--space-16);
  display: flex;
  justify-content: center;
  position: relative;
  z-index: 1;
}

.performanceChart svg {
  border-radius: var(--radius-base);
  box-shadow: var(--shadow-sm);
  transition: all 0.3s ease;
  background: var(--color-surface);
}

/* Адаптивность */
@media (max-width: 768px) {
  .conclusionsCards {
    grid-template-columns: 1fr;
    gap: var(--space-24);
    max-width: 100%;
    padding: var(--space-16);
  }
}

@media (max-width: 1200px) {
  .conclusionsCards {
    max-width: 1000px;
    gap: var(--space-24);
  }
}

/* Анимация появления карточек */
@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px) rotateY(-15deg) scale(0.8);
  }
  50% {
    opacity: 0.7;
    transform: translateX(-20px) rotateY(-5deg) scale(0.9);
  }
  100% {
    opacity: 1;
    transform: translateX(0) rotateY(0deg) scale(1);
  }
}

@keyframes slideInFromRight {
  0% {
    opacity: 0;
    transform: translateX(100px) rotateY(15deg) scale(0.8);
  }
  50% {
    opacity: 0.7;
    transform: translateX(20px) rotateY(5deg) scale(0.9);
  }
  100% {
    opacity: 1;
    transform: translateX(0) rotateY(0deg) scale(1);
  }
}

@keyframes pulseGlow {
  0%, 100% {
    box-shadow: var(--shadow-sm), 0 0 0 0 rgba(var(--color-primary-rgb), 0.4);
  }
  50% {
    box-shadow: var(--shadow-lg), 0 0 20px 5px rgba(var(--color-primary-rgb), 0.2);
  }
}

@keyframes borderShimmer {
  0% {
    background: linear-gradient(90deg, var(--color-primary) 0%, var(--color-primary) 100%);
  }
  25% {
    background: linear-gradient(90deg, var(--color-primary) 0%, #00d4ff 50%, var(--color-primary) 100%);
  }
  50% {
    background: linear-gradient(90deg, var(--color-primary) 0%, #ff6b6b 50%, var(--color-primary) 100%);
  }
  75% {
    background: linear-gradient(90deg, var(--color-primary) 0%, #4ecdc4 50%, var(--color-primary) 100%);
  }
  100% {
    background: linear-gradient(90deg, var(--color-primary) 0%, var(--color-primary) 100%);
  }
}

.conclusionCard {
  background: var(--color-surface);
  border: 1px solid var(--color-card-border);
  border-radius: var(--radius-lg);
  padding: var(--space-24);
  position: relative;
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  box-shadow: var(--shadow-sm);
  opacity: 0;
  transform: translateX(-100px) rotateY(-15deg) scale(0.8);
  overflow: hidden;
  min-height: 200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Псевдоэлемент для эффекта свечения */
.conclusionCard::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, transparent, rgba(var(--color-primary-rgb), 0.1), transparent);
  border-radius: var(--radius-lg);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.conclusionCard.animate {
  opacity: 1;
  transform: translateX(0) rotateY(0deg) scale(1);
}

/* Анимация для четных карточек (справа) */
.conclusionCard.animate:nth-child(even) {
  animation: slideInFromRight 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

/* Анимация для нечетных карточек (слева) */
.conclusionCard.animate:nth-child(odd) {
  animation: slideInFromLeft 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

.conclusionCard:hover {
  transform: translateY(-8px) scale(1.03) rotateX(5deg);
  box-shadow: 
    var(--shadow-xl),
    0 20px 40px rgba(var(--color-primary-rgb), 0.15),
    0 0 30px rgba(var(--color-primary-rgb), 0.1);
  border-color: var(--color-primary);
  animation: pulseGlow 2s infinite;
}

.conclusionCard:hover::before {
  opacity: 1;
}

.conclusionCard:hover .conclusionBorderLeft {
  animation: borderShimmer 2s infinite;
  width: 6px;
}

.conclusionBorderLeft {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 4px;
  border-radius: var(--radius-sm);
  transition: all 0.3s ease;
}

.conclusionBorderLeft.blue {
  background: var(--color-primary);
}

.conclusionCard p {
  margin: 0;
  font-size: var(--font-size-base);
  color: var(--color-text);
  line-height: var(--line-height-normal);
  position: relative;
  z-index: 1;
}

.performanceChart {
  margin-bottom: var(--space-16);
  display: flex;
  justify-content: center;
  position: relative;
  z-index: 1;
}

.performanceChart svg {
  border-radius: var(--radius-base);
  box-shadow: var(--shadow-sm);
  transition: all 0.3s ease;
}

.conclusionCard:hover .performanceChart svg {
  transform: scale(1.05);
  box-shadow: var(--shadow-lg);
}

/* Адаптивность для мобильных устройств */
@media (max-width: 768px) {
  .conclusionsCards {
    grid-template-columns: 1fr;
    gap: var(--space-16);
    max-width: 100%;
    padding: var(--space-12);
  }
  
  .conclusionCard {
    min-height: 150px;
  }
  
  .conclusionCard.animate:nth-child(even),
  .conclusionCard.animate:nth-child(odd) {
    animation: slideInFromLeft 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
  }
}

/* Дополнительные эффекты для особых карточек */
.conclusionCard:first-child {
  background: linear-gradient(135deg, var(--color-surface) 0%, rgba(var(--color-primary-rgb), 0.02) 100%);
}

.conclusionCard:last-child {
  background: linear-gradient(135deg, var(--color-surface) 0%, rgba(var(--color-success-rgb), 0.02) 100%);
}

.conclusionCard:last-child .conclusionBorderLeft.blue {
  background: linear-gradient(180deg, var(--color-primary) 0%, var(--color-success) 100%);
}