import React from 'react';
import ModelCard from '../cards/ModelCard';
import CardsLayout from '../layouts/CardsLayout';

interface SlideProps {
  isActive: boolean;
  isVisited: boolean;
}

const IBDecisionSlide: React.FC<SlideProps> = ({ isActive, isVisited }) => {
  const models = [
    { icon: '‚ö°', name: 'Cursor', description: '–£ –Ω–µ–≥–æ –µ—Å—Ç—å Team —Ç–∞—Ä–∏—Ñ' },
    { icon: 'üîí', name: 'Gemini plugin', description: '–¢—Ä—É–¥–Ω–æ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å, –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –º–æ–¥–µ–ª–∏' },
    { icon: 'üîÑ', name: 'Trae.ai', description: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–ø–∏—Ä—É–µ—Ç Cursor, –Ω–æ –Ω–µ—Ç Team —Ç–∞—Ä–∏—Ñ–∞' },
   ];

  return (
    <CardsLayout 
      title="–ú—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω–∏–∫–∞–º–∏ –ø–æ—Å–æ–≤–µ—â–∞–ª–∏—Å—å..." 
      subtitle='–∏ –ê—Ä—Ç–µ–º –û–ª–∏—Ñ–∏—Ä–µ–Ω–∫–æ —Ä–µ—à–∏–ª. –ß—Ç–æ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Cursor.'
      cols="3" 
      horizontalGap="large" 
      verticalGap="medium"
      contentWidth="narrow"
      animationType="grasshopper"
      animationDelay={150}
      isActive={isActive}
      isVisited={isVisited}
    >
      {models.map((model) => (
        <ModelCard
          size="medium"
          key={model.name}
          icon={model.icon}
          name={model.name}
          description={model.description}
        />
      ))}
    </CardsLayout>
  );
};

export default IBDecisionSlide;