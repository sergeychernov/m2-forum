import React from 'react';
import CardsLayout from '../layouts/CardsLayout';
import SlideWrapper from "../wrappers/SlideWrapper";
import FeaturesListCard from '../cards/FeaturesListCard';
import QRCard from '../cards/QRCard';
import GridSpan from '../wrappers/GridSpan';

interface SlideProps {
  isActive: boolean;
  isVisited: boolean;
}

const DocumentationSlide: React.FC<SlideProps> = ({ isActive, isVisited }) => {
  return (
    <SlideWrapper
      title="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
      sign='üé©'
    >
      <CardsLayout
        cols="2"
        horizontalGap="large"
        verticalGap="medium"
        contentWidth="wide"
        animationType="appearance"
        animationDelay={150}
        isActive={isActive}
        isVisited={isVisited}
      >
        <FeaturesListCard
          title="üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
          category="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –Ω—É–ª—è"
          features={[
            { icon: "üöÄ", text: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ README —Ñ–∞–π–ª–æ–≤" },
            { icon: "üìã", text: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏" },
            { icon: "üìñ", text: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤" },
            { icon: "üîß", text: "–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞" }
          ]}
          note={{
            type: "advantage",
            text: "AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–¥ –∏ —Å–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"
          }}
          animationType="appearance"
          animationIndex={0}
          animationDelay={200}
          isActive={isActive}
          isVisited={isVisited}
        />

        <FeaturesListCard
          title="‚úèÔ∏è –£–ª—É—á—à–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
          category="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
          features={[
            { icon: "üîç", text: "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫" },
            { icon: "üìä", text: "–£–ª—É—á—à–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏" },
            { icon: "üéØ", text: "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤" },
            { icon: "üí°", text: "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞" }
          ]}
          note={{
            type: "note",
            text: "–í—ã–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ AI —É–ª—É—á—à–∏—Ç—å –µ–≥–æ"
          }}
          animationType="appearance"
          animationIndex={1}
          animationDelay={350}
          isActive={isActive}
          isVisited={isVisited}
        />

        <FeaturesListCard
          title="üåç –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è"
          category="–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏"
          features={[
            { icon: "üá∫üá∏", text: "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫" },
            { icon: "üá∑üá∫", text: "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫" },
            { icon: "üá©üá™", text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —è–∑—ã–∫–æ–≤" },
            { icon: "üîÑ", text: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏" }
          ]}
          note={{
            type: "advantage",
            text: "AI —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ"
          }}
          animationType="appearance"
          animationIndex={2}
          animationDelay={500}
          isActive={isActive}
          isVisited={isVisited}
        />

        <FeaturesListCard
          title="ü§ñ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥"
          category="–ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è Cursor"
          features={[
            { icon: "üìù", text: "\"–°–æ–∑–¥–∞–π README –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞\"" },
            { icon: "üîß", text: "\"–î–æ–±–∞–≤—å —Ä–∞–∑–¥–µ–ª –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ\"" },
            { icon: "üåç", text: "\"–ü–µ—Ä–µ–≤–µ–¥–∏ —ç—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\"" },
            { icon: "‚ú®", text: "\"–£–ª—É—á—à–∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞\"" }
          ]}
          note={{
            type: "note",
            text: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Cmd+K –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–∑–æ–≤–∞ AI –ø–æ–º–æ—â–Ω–∏–∫–∞"
          }}
          animationType="appearance"
          animationIndex={3}
          animationDelay={650}
          isActive={isActive}
          isVisited={isVisited}
        />

        {/* QR-–∫–æ–¥ —Ä–∞—Å—Ç—è–Ω—É—Ç –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ —Å –ø–æ–º–æ—â—å—é GridSpan */}
        <GridSpan cols={2}>
          <QRCard
            title="–°—Ç–∞—Ç—å—è –Ω–∞ habr –∑–∞ 40 –º–∏–Ω—É—Ç"
            description="–ù–∞–ø–∏—Å–∞–Ω–∞ –ø–æ —Ç–µ–∑–∏—Å–∞–º –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é ChatGPT"
            url="https://habr.com/ru/articles/926944/"
            icon="üìÑ"
            animationType="appearance"
            animationIndex={4}
            animationDelay={800}
            isActive={isActive}
            isVisited={isVisited}
          />
        </GridSpan>
      </CardsLayout>
    </SlideWrapper>
  );
};

export default DocumentationSlide;